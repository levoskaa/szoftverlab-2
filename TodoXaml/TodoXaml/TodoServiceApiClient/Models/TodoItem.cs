// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace TodoXaml.TodoServiceApi.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System;

    /// <summary>
    /// Teendő adatai
    /// </summary>
    public partial class TodoItem
    {
        /// <summary>
        /// Teendő azonosítója
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public int Id { get; set; }

        /// <summary>
        /// Teendő készültsági állapota
        /// </summary>
        [JsonProperty(PropertyName = "isDone")]
        public bool IsDone { get; set; }

        /// <summary>
        /// Teendő címe
        /// </summary>
        [JsonProperty(PropertyName = "title")]
        public string Title { get; set; }

        /// <summary>
        /// Teendő leírása
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// Teendő határideje
        /// </summary>
        [JsonProperty(PropertyName = "deadline")]
        public DateTimeOffset Deadline { get; set; }

        /// <summary>
        /// Possible values include: 'High', 'Normal', 'Low'
        /// </summary>
        [JsonProperty(PropertyName = "priority")]
        public TodoXaml.Models.Priority Priority { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (Title == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Title");
            }
            if (Description == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Description");
            }
            if (Priority == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Priority");
            }
            if (this.Title != null)
            {
                if (this.Title.Length > 50)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "Title", 50);
                }
            }
            if (this.Description != null)
            {
                if (this.Description.Length > 1500)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "Description", 1500);
                }
            }
        }
    }
}
